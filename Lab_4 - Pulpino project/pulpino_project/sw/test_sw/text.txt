
#define __riscv__
#define LED_DELAY 1000000

//#include <spi.h>
#include <gpio.h>
#include <uart.h>
//#include <utils.h>
#include <pulpino.h>
#include <kuznechik.h>


void cipher(){
  unsigned int data[4];
  unsigned int encoded_data[4];
  char buff[16];
  int i = 0;

  data[3] = 0x3EE5C99F;
  data[2] = 0x9A41C389;
  data[1] = 0xAC17B4FE;
  data[0] = 0x99C72AE4;

  cipher_write_data(data);

  char encoded_msg[16];
  cipher_read_data((unsigned int *)encoded_data);

  cipher_write_data(encoded_data);
  
  for (i = 0; i < 16; i++)
  {
    buff[15 - i] = encoded_msg[i];
  }

  uart_send(buff, 16);
  uart_wait_tx_done();
}

int main()
{
  cipher_init();

  uart_set_cfg(0, 7); // 325 - 9600 baud UART, no parity (50MHz CPU)

  while(1) {
    uart_send(":\n", 2);
    uart_wait_tx_done();

    cipher();
  }
}

\


#include <kuznechik.h>

void cipher_init(void){
    // cipher_inst = (volatile struct CIPHER_APB*) CIPHER_BASE_ADDR + 0x42;
    *(volatile int*) (CIPHER_REG_ADDR_RST) = 1;
}
void cipher_reset(void){
    *(volatile int*) (CIPHER_REG_ADDR_RST) = 0;
    *(volatile int*) (CIPHER_REG_ADDR_RST) = 1;
}
void cipher_write_data(unsigned int data[4]){
    while((*(volatile unsigned int*)(CIPHER_REG_ADDR_BUSY)) == 1);
    *(volatile int*) (CIPHER_REG_ADDR_DATA_IN_0) = data[0];
    *(volatile int*) (CIPHER_REG_ADDR_DATA_IN_1) = data[1];
    *(volatile int*) (CIPHER_REG_ADDR_DATA_IN_2) = data[2];
    *(volatile int*) (CIPHER_REG_ADDR_DATA_IN_3) = data[3];
}

void cipher_read_data(unsigned int data[4]){
    *(volatile int*) (CIPHER_REG_ADDR_REQ) = 1;
    while((*(volatile unsigned int*)(CIPHER_REG_ADDR_VALID)) == 0);
    data[0] = *(volatile int*) (CIPHER_REG_ADDR_DATA_OUT_0);
    data[1] = *(volatile int*) (CIPHER_REG_ADDR_DATA_OUT_1);
    data[2] = *(volatile int*) (CIPHER_REG_ADDR_DATA_OUT_2);
    data[3] = *(volatile int*) (CIPHER_REG_ADDR_DATA_OUT_3);
    *(volatile int*) (CIPHER_REG_ADDR_ACK) = 1;
}
